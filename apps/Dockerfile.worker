# syntax=docker/dockerfile:1

# Build the application from source
FROM golang:1.22 AS builder
ARG service

WORKDIR /app

# copy workspace & utils
COPY go.work go.work.sum ./
COPY packages/utils/  ./packages/utils/
# copy all go mod sum
COPY apps/api/go.mod apps/api/go.sum ./apps/api/
COPY apps/scheduler/go.mod apps/scheduler/go.sum ./apps/scheduler/
COPY apps/worker/go.mod apps/worker/go.sum ./apps/worker/

WORKDIR /app/apps/${service}
RUN go mod download

COPY apps/${service}/ ./

RUN CGO_ENABLED=0 GOOS=linux go build -o /${service}

# for shell command
FROM busybox:1.35.0-uclibc as busybox

FROM gcr.io/distroless/base-debian11 AS production
ARG service
ENV ENV=production

WORKDIR /

COPY --from=builder /${service} /go-app
COPY --from=busybox /bin/sh /bin/sh


# USER nonroot:nonroot

ENTRYPOINT ["/go-app"]

# Eg.
# docker build --build-arg="service=worker" -f ./apps/Dockerfile.service . -t jobscheduler-worker
# docker run --env-file ./apps/worker/.env jobscheduler-worker
